{"ast":null,"code":"var _jsxFileName = \"/Users/duke/Desktop/HuskyBoxd/src/components/HuskyBoxd/contexts/profile-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport * as service from \"../services/auth-services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileContext = /*#__PURE__*/React.createContext();\nexport const ProfileProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [profile, setProfile] = useState();\n\n  const signin = async (email, password) => {\n    try {\n      const p = await service.signin(email, password);\n      setProfile(p);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const checkLoggedIn = async () => {\n    try {\n      const p = await service.profile();\n      setProfile(p);\n      return p;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const signup = async (username, email, password) => {\n    try {\n      const newUser = await service.signup(username, email, password);\n      setProfile(newUser);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const signupRealID = async (username, email, password, realID) => {\n    const realUser = true;\n\n    try {\n      const newUser = await service.signupRealID(username, email, password, realID, realUser);\n      setProfile(newUser);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const value = {\n    profile,\n    signup,\n    checkLoggedIn,\n    signin,\n    signupRealID\n  };\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileProvider, \"xmVPOM/5AyKtnrQRAITPZeTDUbU=\");\n\n_c = ProfileProvider;\nexport const useProfile = () => {\n  _s2();\n\n  return useContext(ProfileContext);\n};\n\n_s2(useProfile, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileProvider\");","map":{"version":3,"sources":["/Users/duke/Desktop/HuskyBoxd/src/components/HuskyBoxd/contexts/profile-context.js"],"names":["React","useContext","useState","service","ProfileContext","createContext","ProfileProvider","children","profile","setProfile","signin","email","password","p","e","checkLoggedIn","signup","username","newUser","signupRealID","realID","realUser","value","useProfile"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;;AAEA,QAAMQ,MAAM,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACtC,QAAI;AACA,YAAMC,CAAC,GAAG,MAAMV,OAAO,CAACO,MAAR,CACZC,KADY,EAEZC,QAFY,CAAhB;AAIAH,MAAAA,UAAU,CAACI,CAAD,CAAV;AACH,KAND,CAME,OAAOC,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ,GAVD;;AAYA,QAAMC,aAAa,GAAG,YAAY;AAC9B,QAAI;AACA,YAAMF,CAAC,GAAG,MAAMV,OAAO,CAACK,OAAR,EAAhB;AACAC,MAAAA,UAAU,CAACI,CAAD,CAAV;AACA,aAAOA,CAAP;AACH,KAJD,CAIE,OAAOC,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ,GARD;;AAUA,QAAME,MAAM,GAAG,OAAOC,QAAP,EAAiBN,KAAjB,EAAwBC,QAAxB,KAAqC;AAChD,QAAI;AACA,YAAMM,OAAO,GAAG,MAAMf,OAAO,CAACa,MAAR,CAClBC,QADkB,EAElBN,KAFkB,EAGlBC,QAHkB,CAAtB;AAKAH,MAAAA,UAAU,CAACS,OAAD,CAAV;AACH,KAPD,CAOE,OAAOJ,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ,GAXD;;AAaA,QAAMK,YAAY,GAAG,OAAOF,QAAP,EAAiBN,KAAjB,EAAwBC,QAAxB,EAAkCQ,MAAlC,KAA6C;AAC9D,UAAMC,QAAQ,GAAG,IAAjB;;AACA,QAAI;AACA,YAAMH,OAAO,GAAG,MAAMf,OAAO,CAACgB,YAAR,CAClBF,QADkB,EAElBN,KAFkB,EAGlBC,QAHkB,EAIlBQ,MAJkB,EAKlBC,QALkB,CAAtB;AAOAZ,MAAAA,UAAU,CAACS,OAAD,CAAV;AACH,KATD,CASE,OAAOJ,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ,GAdD;;AAgBA,QAAMQ,KAAK,GAAG;AAACd,IAAAA,OAAD;AAAUQ,IAAAA,MAAV;AAAkBD,IAAAA,aAAlB;AAAiCL,IAAAA,MAAjC;AAAyCS,IAAAA;AAAzC,GAAd;AACA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEG,KAAhC;AAAA,cACKf;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5DM;;GAAMD,e;;KAAAA,e;AA8Db,OAAO,MAAMiB,UAAU,GAAG,MAAM;AAAA;;AAC5B,SAAOtB,UAAU,CAACG,cAAD,CAAjB;AACH,CAFM;;IAAMmB,U","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport * as service from \"../services/auth-services\";\n\nconst ProfileContext = React.createContext()\n\nexport const ProfileProvider = ({children}) => {\n    const [profile, setProfile] = useState()\n\n    const signin = async (email, password) => {\n        try {\n            const p = await service.signin(\n                email,\n                password\n            )\n            setProfile(p)\n        } catch (e) {\n            throw e\n        }\n    }\n\n    const checkLoggedIn = async () => {\n        try {\n            const p = await service.profile()\n            setProfile(p)\n            return p\n        } catch (e) {\n            throw e\n        }\n    }\n\n    const signup = async (username, email, password) => {\n        try {\n            const newUser = await service.signup(\n                username,\n                email,\n                password\n            )\n            setProfile(newUser)\n        } catch (e) {\n            throw e\n        }\n    }\n\n    const signupRealID = async (username, email, password, realID) => {\n        const realUser = true;\n        try {\n            const newUser = await service.signupRealID(\n                username,\n                email,\n                password,\n                realID,\n                realUser\n            )\n            setProfile(newUser)\n        } catch (e) {\n            throw e\n        }\n    }\n\n    const value = {profile, signup, checkLoggedIn, signin, signupRealID}\n    return(\n        <ProfileContext.Provider value={value}>\n            {children}\n        </ProfileContext.Provider>\n    )\n}\n\nexport const useProfile = () => {\n    return useContext(ProfileContext)\n}"]},"metadata":{},"sourceType":"module"}